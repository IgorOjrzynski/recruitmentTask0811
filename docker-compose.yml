# docker-compose.yml
version: '3.8'

services:

  nginx-ui:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile-ui
    restart: on-failure
    volumes:
      - './apps/ui/public/:/usr/src/app'
      - './docker/nginx/default-ui.conf:/etc/nginx/conf.d/default.conf'
    ports:
      - '80:80'
    depends_on:
      - php-ui
    networks:
      - recruitmentTask

  nginx-api:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile-api
    restart: on-failure
    volumes:
      - './apps/api/public/:/usr/src/app'
      - './docker/nginx/default-api.conf:/etc/nginx/conf.d/default.conf'
    ports:
      - '8100:80'
    depends_on:
      - php-api
    networks:
      - recruitmentTask

  php-ui:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    restart: on-failure
    user: 1000:1000
    volumes:
      - './apps/ui/:/usr/src/app/'
    networks:
      - recruitmentTask

  php-api:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    restart: on-failure
    user: 1000:1000
    volumes:
      - './apps/api/:/usr/src/app/'
    depends_on:
      - postgres-recruitment
    networks:
      - recruitmentTask

  postgres-recruitment:
    image: postgres:9.5-alpine
    volumes:
      - './database/postgres:/var/lib/postgresql/data'
    environment:
      - POSTGRES_USER=symfony_user
      - POSTGRES_PASSWORD=symfony4
      - POSTGRES_DB=symfony_db
    ports:
      - '5432:5432'
    networks:
      - recruitmentTask

networks:
  recruitmentTask:
